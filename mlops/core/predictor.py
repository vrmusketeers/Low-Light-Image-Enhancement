import numpy as np
import pandas as pd
import tensorflow as tf
import pickle
import os
from tensorflow import keras
from utils.ZeroDCE import ZeroDCE
import base64

#Google Storage Bucket Name for the Model 
BUCKET = 'gs://zero-dce/'

class ZeroDecPredictor:

    def __init__(self):
		#Instantiate class and create model 
        models = self.from_path()
        self.models = models

    def infer(self, original_image):
		#Create the image array from the image
        image = keras.preprocessing.image.img_to_array(original_image)
		#Normalize the image 
        image = image.astype("float32") / 255.0
        #Add addtional axis to the array
		image = np.expand_dims(image, axis=0)
        #Run Model
		output_image = self.models['zerodce'](image)
        #Create the image array from the output array by de-normalizing it
		output_image = tf.cast((output_image[0, :, :, :] * 255), dtype=np.uint8)
        output_image = Image.fromarray(output_image.numpy())
        return output_image

    def predict(self, instances):
        #Decode the base64 encoded image file
		api_input = instances
        original_image = base64.urlsafe_b64decode(api_input)
        original_image = Image.open(io.BytesIO(original_image))
        #Run model prediction
		output_image = self.infer(original_image)
        #Create a 'in memory file' to read the bytes generated by the predictor
        in_mem_file = io.BytesIO()
        output_image.save(in_mem_file, format = "PNG")
        in_mem_file.seek(0)
        img_bytes = in_mem_file.read()
        #Encode teh output in base64 and convert it to a string
        image = base64.urlsafe_b64encode(img_bytes).decode('utf-8')
        # Create API output
        api_output = {
            'predictions': image
        }
        return api_output
    
    def from_path(self):
		#Get the weights from storage bucket and instantiate the ZeroDCE Model
        models = {}
        zerodce = ZeroDCE.ZeroDCE()
        print(zerodce.dce_model)
        #zerodce.load_model(BUCKET + 'model/')
        zerodce.load_weights(BUCKET + 'weights/')
        models['zerodce'] = zerodce
        return models
